/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_lpar {
            bindings = <&kp LPAR>;
            key-positions = <4 5>;
        };

        combo_lbkt {
            bindings = <&kp LBKT>;
            key-positions = <16 17>;
        };

        combo_lbrc {
            bindings = <&kp LBRC>;
            key-positions = <28 29>;
        };

        combo_rpar {
            bindings = <&kp RPAR>;
            key-positions = <6 7>;
        };

        combo_rbkt {
            bindings = <&kp RBKT>;
            key-positions = <18 19>;
        };

        combo_rbrc {
            bindings = <&kp RBRC>;
            key-positions = <30 31>;
        };

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };

        combo_tilde {
            bindings = <&kp TILDE>;
            key-positions = <21 22>;
        };

        combo_grave {
            bindings = <&kp GRAVE>;
            key-positions = <22 23>;
        };

        combo_bslh {
            bindings = <&kp BSLH>;
            key-positions = <33 34>;
        };

        combo_pipe {
            bindings = <&kp PIPE>;
            key-positions = <34 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LALT   &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp FSLH
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp SQT   &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB          &kp N1           &kp N2          &kp N3           &kp N4           &kp N5             &kp N6     &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI    &trans     &trans    &trans    &trans     &trans  &trans
                                                  &rgb_ug RGB_SPI  &trans           &kp LGUI           &kp SPACE  &tog 0    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &tog 0    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
